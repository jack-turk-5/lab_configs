---
- name: Include encrypted variables
  ansible.builtin.include_vars:
    file: ../../secrets.yml
    name: vaulted_secrets

- name: Check if vaultwarden admin token secret exists
  ansible.builtin.command:
    cmd: podman secret exists vw-admin-token
  register: admin_token_secret_check
  failed_when: false
  changed_when: false

- name: Create vaultwarden admin token secret from vault if it does not exist
  containers.podman.podman_secret:
    name: vw-admin-token
    data: "{{ vaulted_secrets.vw_admin_token }}"
    state: present
  when: admin_token_secret_check.rc != 0
  register: admin_token_secret_created

- name: Create Vaultwarden config directory structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "~/.config/vault"

- name: Create Vaultwarden data directory with strict permissions
  ansible.builtin.file:
    path: "~/.config/vault/data"
    state: directory
    mode: '0700'

- name: Copy Vaultwarden environment file
  ansible.builtin.copy:
    src: vault.env
    dest: "~/.config/vault/env"
    mode: '0600'

- name: Copy Vaultwarden systemd unit to user quadlet directory
  ansible.builtin.copy:
    src: vault.container
    dest: "~/.config/containers/systemd/"

- name: Reload systemd user daemon to detect new units
  ansible.builtin.systemd:
    scope: user
    daemon_reload: yes

- name: Ensure Vaultwarden service is started and enabled
  ansible.builtin.systemd:
    scope: user
    name: vault
    enabled: yes
    state: started
